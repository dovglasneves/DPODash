unit uFunctions;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, Math;

function FormatarTelefone(Value: String): String;
function FormataCEP(Value: String): String;
function FormataCEP(Value: String): String;

implementation

function FormatarTelefone(Value: String): String;
var
CA, Num1, Num2: String;
begin
// Entrada 3334449999 ==> (33) 3444-9999
case Trim(Value).Length of
  10:
  begin
    CA   := Copy(Trim(Value),1,2);
    Num1 := Copy(Trim(Value),3,4);
    Num2  := Copy(Trim(Value),7,4);
    Result := Format('(%2s) %4s-%4s', [CA, Num1, Num2]);
  end;
  11:
  begin
    CA   := Copy(Trim(Value),1,2);
    Num1 := Copy(Trim(Value),3,5);
    Num2  := Copy(Trim(Value),8,4);
    Result := Format('(%2s) %5s-%4s', [CA, Num1, Num2]);
  end;
end;
end;

function FormataCEP(Value: String): String;
var
    Pref, Suff: String;
begin
// comes in like 36010410
if Trim(Value).Length = 8 then
  begin
    Pref  := Copy(Value, 1, 5);
    Suff := Copy(Value, 6, 3);
    Result := Format('%5s/-%3s', [Pref, Suff]);
  end;
end;

function UpperNome(const Nome: string): string;
var
  x: Integer;
  lista: array[0..4] of string[03];

  function NaoAchaPreposicao(Palavra: string): Boolean;
  var
    x: Integer;
  begin
    Result := True;
    for x := 0 to 4 do
      if Trim(Palavra) = lista[x] then
        Result := False;
  end;
begin
  Result := Nome;

  lista[0] := 'das'; lista[1] := 'dos';
  lista[2] := 'de'; lista[3] := 'do';
  lista[4] := 'da';

  Result := UpCase(Result[1]) + Copy(Result, 2, Length(Result));

  for x := 2 to Length(Nome) do begin
    if Nome[x] = 32 then

      if Copy(Nome, x + 1, 1) <> ' e ' then
        if NaoAchaPreposicao(Copy(Nome, x + 1, 3)) then
          Result := Copy(Result, 1, x)
            + UpCase(Result[x + 1])
            + Copy(Result, x + 2, Length(Result));
  end;
end;

end.
